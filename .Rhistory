path <- "quantexampel.xls"
xlsx::read.xlsx(path,sheetName = "Melt Curve Raw Data")
?read.xlsx
x1 <- xlsx::read.xlsx(path,sheetName = "Melt Curve Raw Data")
dim(x1)
names(x1)
x1[1,1:100]
dim(x1)
x1[1:100,1]
x1[100:200,1]
x1[100:200,2]
grep("Well",x1[1,])
grep("Well",x1[,1])
mc.data <- x1
if(TRUE){print(1)}else{print(2)}
if(FALSE){print(1)}else{print(2)}
rowstart
rs <- grep("Well",x1[,1])
rs
x1[rs,]
names(x1) <- x1[rs,]
x1[1,]
x1[rs,]
x1[1,1]
rownames(x1)
colnames(x1)
colnames(x1) <- x1[rs,]
x1
x1[1,]
colnames(x1) <- x1[rs,] %>% as.character
colnames(x1) <- as.character(x1[rs,])
x1[rs,]
colnames(x1)
as.character(x1[rs,])
x1[rs,]
x1[rs,1]
options(stringsAsFactors = FALSE)
x2 <- x1
x2[rs,]
x2[rs,1]
mc.data <- xlsx::read.xlsx(path,sheetName = "Melt Curve Raw Data")
mcdata[rs,]
mc.data[rs,]
mc.data[rs,1]
mc.data[rs,]
names(mc.data) <- mc.data[rs,]
mc.data[rs,]
removeTopMatter <- function(table, keyword, rm.keyrow = TRUE){
#removeTopMatter looks for occurance of keyword string in the first column of
#table, and removes all rows leading up to that keyword.
#if rm.keyrow, then  keyword row is set as the column names and row is removed
options(stringsAsFactors = FALSE)
rowstart <- grep("Well",table[,1])
if(rm.keyrow){
rm.range <- 1:rowstart
names(table) <- table[rowstart,]
} else{rm.range <- 1:(rowstart-1)}
table <- table[-rm.range,]
return(table)
}
dim(mc.data)
mc2 <- removeTopMatter(mc.data,"Well")
dim(mc2)
mc1[1,1]
mc2[,1]
mc2[1,]
mc2[1:10,]
unique(mc2$`Well Position`)
#create new table with just well position and derivative peaks
mc.peak <- data.frame("Well_Position" <- unique(mc2$`Well Position`),Temp=NA)
mc.peak
#create new table with just well position and derivative peaks
mc.peak <- data.frame("Well_Position" = unique(mc2$`Well Position`),Temp=NA)
mc.peak
#create new table with just well position and derivative peaks
mc.peak <- data.frame(Well_Position = unique(mc2$`Well Position`),
MC_Temp = NA)
head(mc.peak)
mc.peak$Temp <- sapply(1:nrow(mc.peak),function(x){
max(mc.data[mc.data$`Well Position`==mc.peak$Well_Position[x],])})
mc.peak$Well_Position[1]
mc.data[mc.data$`Well Position`==mc.peak$Well_Position[x],]
mc.data[mc.data$`Well Position`==mc.peak$Well_Position[1],]
mc.peak$Temp <- sapply(1:nrow(mc.peak),function(x){
well.data <- na.omit(
mc.data[mc.data$`Well Position`==mc.peak$Well_Position[x],])
well.data$Tempaerature[well.data$Derivative == max(well.data$Derivative)]
})
head(mc.peak)
mc.peak[1,2]
#create new table with just well position and derivative peaks
mc.peak <- data.frame(Well_Position = unique(mc2$`Well Position`),
MC_Temp = NA)
x <- 1
well.data <- na.omit(
mc.data[mc.data$`Well Position`==mc.peak$Well_Position[x],])
well.data
well.data$Tempaerature[well.data$Derivative == max(well.data$Derivative)]
well.data$Temperature[well.data$Derivative == max(well.data$Derivative)]
mc.peak$MC_Temp <- sapply(1:nrow(mc.peak),function(x){
well.data <- na.omit(
mc.data[mc.data$`Well Position`==mc.peak$Well_Position[x],])
well.data$Temperature[well.data$Derivative == max(well.data$Derivative)]
})
head(mc.peak)
mc.peak
